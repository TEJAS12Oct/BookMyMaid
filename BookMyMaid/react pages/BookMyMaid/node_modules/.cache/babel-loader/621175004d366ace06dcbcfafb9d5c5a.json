{"ast":null,"code":"export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","map":{"version":3,"sources":["F:/IET/IET PROJECT/20/react pages/BookMyMaid/node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js"],"names":["buildLocalizeFn","args","dirtyIndex","options","context","String","valuesArray","formattingValues","defaultWidth","defaultFormattingWidth","width","_defaultWidth","_width","values","index","argumentCallback"],"mappings":"AAAA,eAAe,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC5C,SAAO,UAAUC,UAAV,EAAsBC,OAAtB,EAA+B;AACpC,QAAIC,OAAO,GAAGD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACC,OAAlD,GAA4DC,MAAM,CAACF,OAAO,CAACC,OAAT,CAAlE,GAAsF,YAApG;AACA,QAAIE,WAAJ;;AAEA,QAAIF,OAAO,KAAK,YAAZ,IAA4BH,IAAI,CAACM,gBAArC,EAAuD;AACrD,UAAIC,YAAY,GAAGP,IAAI,CAACQ,sBAAL,IAA+BR,IAAI,CAACO,YAAvD;AACA,UAAIE,KAAK,GAAGP,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACO,KAAlD,GAA0DL,MAAM,CAACF,OAAO,CAACO,KAAT,CAAhE,GAAkFF,YAA9F;AACAF,MAAAA,WAAW,GAAGL,IAAI,CAACM,gBAAL,CAAsBG,KAAtB,KAAgCT,IAAI,CAACM,gBAAL,CAAsBC,YAAtB,CAA9C;AACD,KAJD,MAIO;AACL,UAAIG,aAAa,GAAGV,IAAI,CAACO,YAAzB;;AAEA,UAAII,MAAM,GAAGT,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACO,KAAlD,GAA0DL,MAAM,CAACF,OAAO,CAACO,KAAT,CAAhE,GAAkFT,IAAI,CAACO,YAApG;;AAEAF,MAAAA,WAAW,GAAGL,IAAI,CAACY,MAAL,CAAYD,MAAZ,KAAuBX,IAAI,CAACY,MAAL,CAAYF,aAAZ,CAArC;AACD;;AAED,QAAIG,KAAK,GAAGb,IAAI,CAACc,gBAAL,GAAwBd,IAAI,CAACc,gBAAL,CAAsBb,UAAtB,CAAxB,GAA4DA,UAAxE,CAhBoC,CAgBgD;;AAEpF,WAAOI,WAAW,CAACQ,KAAD,CAAlB;AACD,GAnBD;AAoBD","sourcesContent":["export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}"]},"metadata":{},"sourceType":"module"}