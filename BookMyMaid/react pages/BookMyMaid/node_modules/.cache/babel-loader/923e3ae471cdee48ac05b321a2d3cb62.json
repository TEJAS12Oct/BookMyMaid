{"ast":null,"code":"import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","map":{"version":3,"sources":["F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/date-fns/esm/_lib/setUTCISODay/index.js"],"names":["toDate","requiredArgs","toInteger","setUTCISODay","dirtyDate","dirtyDay","arguments","day","weekStartsOn","date","currentDay","getUTCDay","remainder","dayIndex","diff","setUTCDate","getUTCDate"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,eAAe,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,QAAjC,EAA2C;AACxDJ,EAAAA,YAAY,CAAC,CAAD,EAAIK,SAAJ,CAAZ;AACA,MAAIC,GAAG,GAAGL,SAAS,CAACG,QAAD,CAAnB;;AAEA,MAAIE,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjBA,IAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACD;;AAED,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,IAAI,GAAGT,MAAM,CAACI,SAAD,CAAjB;AACA,MAAIM,UAAU,GAAGD,IAAI,CAACE,SAAL,EAAjB;AACA,MAAIC,SAAS,GAAGL,GAAG,GAAG,CAAtB;AACA,MAAIM,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;AACA,MAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGL,YAAX,GAA0B,CAA1B,GAA8B,CAA/B,IAAoCD,GAApC,GAA0CG,UAArD;AACAD,EAAAA,IAAI,CAACM,UAAL,CAAgBN,IAAI,CAACO,UAAL,KAAoBF,IAApC;AACA,SAAOL,IAAP;AACD","sourcesContent":["import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}"]},"metadata":{},"sourceType":"module"}