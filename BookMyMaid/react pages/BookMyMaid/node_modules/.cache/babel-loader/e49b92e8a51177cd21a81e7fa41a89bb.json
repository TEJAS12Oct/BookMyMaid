{"ast":null,"code":"import _classCallCheck from \"F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\"; // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\nexport var YearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(YearParser, _Parser);\n\n  var _super = _createSuper(YearParser);\n\n  function YearParser() {\n    var _this;\n\n    _classCallCheck(this, YearParser);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n\n    return _this;\n  }\n\n  _createClass(YearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return mapValue(parseNDigits(4, dateString), valueCallback);\n\n        case 'yo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'year'\n          }), valueCallback);\n\n        default:\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n\n  return YearParser;\n}(Parser);","map":{"version":3,"sources":["F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/date-fns/esm/parse/_lib/parsers/YearParser.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Parser","mapValue","normalizeTwoDigitYear","parseNDigits","YearParser","arguments","dateString","token","match","valueCallback","year","isTwoDigitYear","ordinalNumber","unit","length","_date","date","flags","currentYear","getUTCFullYear","normalizedTwoDigitYear","setUTCFullYear","setUTCHours","era"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 130);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    var valueCallback = function (year) {\n      return {\n        year: year,\n        isTwoDigitYear: token === 'yy'\n      };\n    };\n\n    switch (token) {\n      case 'y':\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n\n      case 'yo':\n        return mapValue(match.ordinalNumber(dateString, {\n          unit: 'year'\n        }), valueCallback);\n\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    var currentYear = date.getUTCFullYear();\n\n    if (value.isTwoDigitYear) {\n      var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n      date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n\n    var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setUTCFullYear(year, 0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}