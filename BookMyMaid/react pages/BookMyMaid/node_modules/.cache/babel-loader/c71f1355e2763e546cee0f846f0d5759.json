{"ast":null,"code":"import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover'; // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\nexport default function useOverlayOffset(customOffset) {\n  var overlayRef = useRef(null);\n  var popoverClass = useBootstrapPrefix(undefined, 'popover');\n  var offset = useMemo(function () {\n    return {\n      name: 'offset',\n      options: {\n        offset: function offset() {\n          if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\n            return customOffset || Popover.POPPER_OFFSET;\n          }\n\n          return customOffset || [0, 0];\n        }\n      }\n    };\n  }, [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}","map":{"version":3,"sources":["F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/react-bootstrap/esm/useOverlayOffset.js"],"names":["useMemo","useRef","hasClass","useBootstrapPrefix","Popover","useOverlayOffset","customOffset","overlayRef","popoverClass","undefined","offset","name","options","current","POPPER_OFFSET"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAAiC;AACjC;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACrD,MAAMC,UAAU,GAAGN,MAAM,CAAC,IAAD,CAAzB;AACA,MAAMO,YAAY,GAAGL,kBAAkB,CAACM,SAAD,EAAY,SAAZ,CAAvC;AACA,MAAMC,MAAM,GAAGV,OAAO,CAAC;AAAA,WAAO;AAC5BW,MAAAA,IAAI,EAAE,QADsB;AAE5BC,MAAAA,OAAO,EAAE;AACPF,QAAAA,MAAM,EAAE,kBAAM;AACZ,cAAIH,UAAU,CAACM,OAAX,IAAsBX,QAAQ,CAACK,UAAU,CAACM,OAAZ,EAAqBL,YAArB,CAAlC,EAAsE;AACpE,mBAAOF,YAAY,IAAIF,OAAO,CAACU,aAA/B;AACD;;AAED,iBAAOR,YAAY,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAvB;AACD;AAPM;AAFmB,KAAP;AAAA,GAAD,EAWlB,CAACA,YAAD,EAAeE,YAAf,CAXkB,CAAtB;AAYA,SAAO,CAACD,UAAD,EAAa,CAACG,MAAD,CAAb,CAAP;AACD","sourcesContent":["import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover'; // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\nexport default function useOverlayOffset(customOffset) {\n  const overlayRef = useRef(null);\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\n  const offset = useMemo(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\n          return customOffset || Popover.POPPER_OFFSET;\n        }\n\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}"]},"metadata":{},"sourceType":"module"}