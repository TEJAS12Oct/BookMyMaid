{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar TIMEZONE_UNIT_PRIORITY = 10;\nexport class Setter {\n  constructor() {\n    _defineProperty(this, \"priority\", void 0);\n\n    _defineProperty(this, \"subPriority\", 0);\n  }\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n\n}\nexport class ValueSetter extends Setter {\n  constructor(value, validateValue, setValue, priority, subPriority) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(utcDate, options) {\n    return this.validateValue(utcDate, this.value, options);\n  }\n\n  set(utcDate, flags, options) {\n    return this.setValue(utcDate, flags, this.value, options);\n  }\n\n}\nexport class DateToSystemTimezoneSetter extends Setter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", TIMEZONE_UNIT_PRIORITY);\n\n    _defineProperty(this, \"subPriority\", -1);\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) {\n      return date;\n    }\n\n    var convertedDate = new Date(0);\n    convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n    convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n    return convertedDate;\n  }\n\n}","map":{"version":3,"sources":["F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/date-fns/esm/parse/_lib/Setter.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","TIMEZONE_UNIT_PRIORITY","Setter","constructor","validate","_utcDate","_options","ValueSetter","validateValue","setValue","priority","subPriority","utcDate","options","set","flags","DateToSystemTimezoneSetter","arguments","date","timestampIsSet","convertedDate","Date","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,IAAIQ,sBAAsB,GAAG,EAA7B;AACA,OAAO,MAAMC,MAAN,CAAa;AAClBC,EAAAA,WAAW,GAAG;AACZX,IAAAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,aAAP,EAAsB,CAAtB,CAAf;AACD;;AAEDY,EAAAA,QAAQ,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC3B,WAAO,IAAP;AACD;;AATiB;AAYpB,OAAO,MAAMC,WAAN,SAA0BL,MAA1B,CAAiC;AACtCC,EAAAA,WAAW,CAACR,KAAD,EAAQa,aAAR,EAAuBC,QAAvB,EAAiCC,QAAjC,EAA2CC,WAA3C,EAAwD;AACjE;AACA,SAAKhB,KAAL,GAAaA,KAAb;AACA,SAAKa,aAAL,GAAqBA,aAArB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;;AAEA,QAAIC,WAAJ,EAAiB;AACf,WAAKA,WAAL,GAAmBA,WAAnB;AACD;AACF;;AAEDP,EAAAA,QAAQ,CAACQ,OAAD,EAAUC,OAAV,EAAmB;AACzB,WAAO,KAAKL,aAAL,CAAmBI,OAAnB,EAA4B,KAAKjB,KAAjC,EAAwCkB,OAAxC,CAAP;AACD;;AAEDC,EAAAA,GAAG,CAACF,OAAD,EAAUG,KAAV,EAAiBF,OAAjB,EAA0B;AAC3B,WAAO,KAAKJ,QAAL,CAAcG,OAAd,EAAuBG,KAAvB,EAA8B,KAAKpB,KAAnC,EAA0CkB,OAA1C,CAAP;AACD;;AAnBqC;AAsBxC,OAAO,MAAMG,0BAAN,SAAyCd,MAAzC,CAAgD;AACrDC,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGc,SAAT;;AAEAzB,IAAAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmBS,sBAAnB,CAAf;;AAEAT,IAAAA,eAAe,CAAC,IAAD,EAAO,aAAP,EAAsB,CAAC,CAAvB,CAAf;AACD;;AAEDsB,EAAAA,GAAG,CAACI,IAAD,EAAOH,KAAP,EAAc;AACf,QAAIA,KAAK,CAACI,cAAV,EAA0B;AACxB,aAAOD,IAAP;AACD;;AAED,QAAIE,aAAa,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAApB;AACAD,IAAAA,aAAa,CAACE,WAAd,CAA0BJ,IAAI,CAACK,cAAL,EAA1B,EAAiDL,IAAI,CAACM,WAAL,EAAjD,EAAqEN,IAAI,CAACO,UAAL,EAArE;AACAL,IAAAA,aAAa,CAACM,QAAd,CAAuBR,IAAI,CAACS,WAAL,EAAvB,EAA2CT,IAAI,CAACU,aAAL,EAA3C,EAAiEV,IAAI,CAACW,aAAL,EAAjE,EAAuFX,IAAI,CAACY,kBAAL,EAAvF;AACA,WAAOV,aAAP;AACD;;AAlBoD","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar TIMEZONE_UNIT_PRIORITY = 10;\nexport class Setter {\n  constructor() {\n    _defineProperty(this, \"priority\", void 0);\n\n    _defineProperty(this, \"subPriority\", 0);\n  }\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n\n}\nexport class ValueSetter extends Setter {\n  constructor(value, validateValue, setValue, priority, subPriority) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(utcDate, options) {\n    return this.validateValue(utcDate, this.value, options);\n  }\n\n  set(utcDate, flags, options) {\n    return this.setValue(utcDate, flags, this.value, options);\n  }\n\n}\nexport class DateToSystemTimezoneSetter extends Setter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", TIMEZONE_UNIT_PRIORITY);\n\n    _defineProperty(this, \"subPriority\", -1);\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) {\n      return date;\n    }\n\n    var convertedDate = new Date(0);\n    convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n    convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n    return convertedDate;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}