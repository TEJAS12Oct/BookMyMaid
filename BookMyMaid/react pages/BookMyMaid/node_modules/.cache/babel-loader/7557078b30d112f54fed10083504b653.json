{"ast":null,"code":"import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","map":{"version":3,"sources":["F:/IET/IET PROJECT/PROJECT WORK/CDacProject/react pages/BookMyMaid/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js"],"names":["toDate","requiredArgs","startOfUTCWeek","toInteger","getDefaultOptions","getUTCWeekYear","dirtyDate","options","_ref","_ref2","_ref3","_options$firstWeekCon","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","arguments","date","year","getUTCFullYear","defaultOptions","firstWeekContainsDate","locale","RangeError","firstWeekOfNextYear","Date","setUTCFullYear","setUTCHours","startOfNextYear","firstWeekOfThisYear","startOfThisYear","getTime"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,eAAe,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,OAAnC,EAA4C;AACzD,MAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,qBAAxB,EAA+CC,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AAEAd,EAAAA,YAAY,CAAC,CAAD,EAAIe,SAAJ,CAAZ;AACA,MAAIC,IAAI,GAAGjB,MAAM,CAACM,SAAD,CAAjB;AACA,MAAIY,IAAI,GAAGD,IAAI,CAACE,cAAL,EAAX;AACA,MAAIC,cAAc,GAAGhB,iBAAiB,EAAtC;AACA,MAAIiB,qBAAqB,GAAGlB,SAAS,CAAC,CAACK,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACc,qBAAnF,MAA8G,IAA9G,IAAsHV,qBAAqB,KAAK,KAAK,CAArJ,GAAyJA,qBAAzJ,GAAiLJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACe,MAA3B,MAAuC,IAAvC,IAA+CV,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACQ,qBAAjc,MAA4d,IAA5d,IAAoeX,KAAK,KAAK,KAAK,CAAnf,GAAufA,KAAvf,GAA+fU,cAAc,CAACC,qBAAvhB,MAAkjB,IAAljB,IAA0jBZ,KAAK,KAAK,KAAK,CAAzkB,GAA6kBA,KAA7kB,GAAqlB,CAACK,qBAAqB,GAAGM,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DR,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACM,qBAA90B,MAAy2B,IAAz2B,IAAi3Bb,IAAI,KAAK,KAAK,CAA/3B,GAAm4BA,IAAn4B,GAA04B,CAA34B,CAArC,CAPyD,CAO23B;;AAEp7B,MAAI,EAAEa,qBAAqB,IAAI,CAAzB,IAA8BA,qBAAqB,IAAI,CAAzD,CAAJ,EAAiE;AAC/D,UAAM,IAAIE,UAAJ,CAAe,2DAAf,CAAN;AACD;;AAED,MAAIC,mBAAmB,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAA1B;AACAD,EAAAA,mBAAmB,CAACE,cAApB,CAAmCR,IAAI,GAAG,CAA1C,EAA6C,CAA7C,EAAgDG,qBAAhD;AACAG,EAAAA,mBAAmB,CAACG,WAApB,CAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;AACA,MAAIC,eAAe,GAAG1B,cAAc,CAACsB,mBAAD,EAAsBjB,OAAtB,CAApC;AACA,MAAIsB,mBAAmB,GAAG,IAAIJ,IAAJ,CAAS,CAAT,CAA1B;AACAI,EAAAA,mBAAmB,CAACH,cAApB,CAAmCR,IAAnC,EAAyC,CAAzC,EAA4CG,qBAA5C;AACAQ,EAAAA,mBAAmB,CAACF,WAApB,CAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;AACA,MAAIG,eAAe,GAAG5B,cAAc,CAAC2B,mBAAD,EAAsBtB,OAAtB,CAApC;;AAEA,MAAIU,IAAI,CAACc,OAAL,MAAkBH,eAAe,CAACG,OAAhB,EAAtB,EAAiD;AAC/C,WAAOb,IAAI,GAAG,CAAd;AACD,GAFD,MAEO,IAAID,IAAI,CAACc,OAAL,MAAkBD,eAAe,CAACC,OAAhB,EAAtB,EAAiD;AACtD,WAAOb,IAAP;AACD,GAFM,MAEA;AACL,WAAOA,IAAI,GAAG,CAAd;AACD;AACF","sourcesContent":["import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}"]},"metadata":{},"sourceType":"module"}